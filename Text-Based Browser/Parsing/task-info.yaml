type: edu
files:
- name: browser.py
  visible: true
  text: "\nnytimes_com = '''\nThis New Liquid Is Magnetic, and Mesmerizing\n\nScientists\
    \ have created \"soft\" magnets that can flow \nand change shape, and that could\
    \ be a boon to medicine \nand robotics. (Source: New York Times)\n\n\nMost Wikipedia\
    \ Profiles Are of Men. This Scientist Is Changing That.\n\nJessica Wade has added\
    \ nearly 700 Wikipedia biographies for\n important female and minority scientists\
    \ in less than two \n years.\n\n'''\n\nbloomberg_com = '''\nThe Space Race: From\
    \ Apollo 11 to Elon Musk\n\nIt's 50 years since the world was gripped by historic\
    \ images\n of Apollo 11, and Neil Armstrong -- the first man to walk \n on the\
    \ moon. It was the height of the Cold War, and the charts\n were filled with David\
    \ Bowie's Space Oddity, and Creedence's \n Bad Moon Rising. The world is a very\
    \ different place than \n it was 5 decades ago. But how has the space race changed\
    \ since\n the summer of '69? (Source: Bloomberg)\n\n\nTwitter CEO Jack Dorsey\
    \ Gives Talk at Apple Headquarters\n\nTwitter and Square Chief Executive Officer\
    \ Jack Dorsey \n addressed Apple Inc. employees at the iPhone makerâ€™s headquarters\n\
    \ Tuesday, a signal of the strong ties between the Silicon Valley giants.\n'''\n\
    \n# write your code here\n"
  learner_created: false
- name: test/__init__.py
  visible: false
  learner_created: false
- name: test/tests.py
  visible: false
  text: |
    from hstest.stage_test import *
    import requests
    import os
    import shutil
    from bs4 import BeautifulSoup
    import sys

    if sys.platform.startswith("win"):
        import _locale
        # pylint: disable=protected-access
        _locale._getdefaultlocale = (lambda *args: ['en_US', 'utf8'])

    CheckResult.correct = lambda: CheckResult(True, '')
    CheckResult.wrong = lambda feedback: CheckResult(False, feedback)


    class TextBasedBrowserTest(StageTest):

        def generate(self):

            dir_for_files = os.path.join(os.curdir, 'tb_tabs')
            return [
                TestCase(
                    stdin='docs.python.org\nexit',
                    attach='docs.python.org',
                    args=[dir_for_files]
                ),
                TestCase(
                    stdin='nytimescom\nexit',
                    attach=None,
                    args=[dir_for_files]
                ),
                TestCase(
                    stdin='back\nexit',
                    attach='back',
                    args=['tb_tabs']
                ),
                TestCase(
                    stdin='peps.python.org/pep-0008/\ndocs.python.org\npeps\nexit',
                    attach=('peps.python.org/pep-0008/', 'docs.python.org', 'peps.python.org/pep-0008/'),
                    args=[dir_for_files]
                ),
                TestCase(
                    stdin='peps.python.org/pep-0008/\ndocs.python.org\nback\nexit',
                    attach=('peps.python.org/pep-0008/', 'docs.python.org', 'docs.python.org'),
                    args=['tb_tabs']
                )
            ]

        def check_output(self, output_text: str, ideal_text: list, page_code: list, source: str):
            """
            :param output_text: the text from the user's file or from the console output
            :param ideal_text: the text from the web page (without HTML tags)
            :param page_code: the text from the web page with HTML tags
            :param source: the name of the file from which the user's text is taken or "console output" line
            :return: raises WrongAnswer if an HTML tag is found in the output_text
            or if a word from the ideal_text is not found in the output_text
            """
            for line in page_code:
                if line not in ideal_text and line in output_text:
                    raise WrongAnswer(f"The following token is present in the {source} even though it's not expected "
                                      f"to be there:\n\'{line}\'\n"
                                      f"Make sure you get rid of all HTML tags.")
            output_text = ''.join(char for char in output_text if char.isalnum())
            for line in ideal_text:
                line_without_spaces = ''.join(char for char in line if char.isalnum())
                if line_without_spaces.strip() not in output_text:
                    raise WrongAnswer(f"The following token is missing from the {source}:\n"
                                      f"\'{line}\'\n"
                                      f"Make sure you get all the text from the web page.")

        def _check_files(self, path_for_tabs: str, ideal_page: list, page_code: list, attach: str):
            """
            Helper which checks that browser saves visited url in files and
            provides access to them.

            :param path_for_tabs: directory which must contain saved tabs
            :param ideal_page: the text from the web page (without HTML tags)
            :param page_code: the text from the web page with HTML tags
            """

            path, dirs, filenames = next(os.walk(path_for_tabs))

            name = attach.split('.')[0]
            if name in filenames:
                print("found file: {}".format(name))
                with open(os.path.join(path_for_tabs, name), 'r', encoding='utf-8') as tab:
                    try:
                        content = tab.read()
                    except UnicodeDecodeError:
                        raise WrongAnswer('An error occurred while reading your saved tab. '
                                          'Perhaps you used the wrong encoding?')
                    self.check_output(content, ideal_page, page_code, "file " + name)

            else:
                raise WrongAnswer(f"Couldn't find file with the name {name}.\n"
                                  f"Make sure you saved the tab and named it correctly.")

        @staticmethod
        def get_page_and_code(url):
            """
            :param url: url link that the program is requested to open
            :return: list with strings of clean text and list of strings with text with HTML tags
            """

            url = f'https://{url}'
            user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) " \
                         "Chrome/70.0.3538.77 Safari/537.36"
            try:
                page = requests.get(url, headers={'User-Agent': user_agent})
            except requests.exceptions.ConnectionError:
                raise WrongAnswer(f"An error occurred while tests tried to connect to the page {url}.\n"
                                  f"Please try again a bit later.")
            soup = BeautifulSoup(page.content, 'html.parser')
            tags = soup.find_all(['p', 'a', 'h1', 'h2', 'ul', 'ol', 'li'])
            text = []
            tagged_text = []
            for tag in tags:
                tag_text = tag.text.strip()
                if tag_text:
                    text.append(tag_text)
                tag = str(tag)
                if tag.startswith('<'):
                    tagged_text.append(tag)
            return text, tagged_text

        def check_correct_url(self, attach_0: str, path_for_tabs: str, reply):

            ideal_text, page_code = TextBasedBrowserTest.get_page_and_code(attach_0)
            self._check_files(path_for_tabs, ideal_text, page_code, attach_0)
            self.check_output(reply, ideal_text, page_code, "console output")

        def check(self, reply, attach):

            # Incorrect URL
            if attach is None:
                if 'invalid url' in reply.lower():
                    return CheckResult.correct()
                else:
                    return CheckResult.wrong('An invalid URL was input to your program.\n'
                                             'Your program should print \'Invalid URL\'.')

            if attach == 'back':
                if not reply:
                    return CheckResult.correct()
                else:
                    return CheckResult.wrong(f'There should be no output. But your program printed: {reply}')

            # Correct URL
            path_for_tabs = os.path.join(os.curdir, 'tb_tabs')

            if not os.path.isdir(path_for_tabs):
                return CheckResult.wrong("There is no directory for tabs")

            if isinstance(attach, tuple):
                for element in attach:
                    attach_0 = element
                    self.check_correct_url(attach_0, path_for_tabs, reply)

            elif isinstance(attach, str):
                attach_0 = attach
                self.check_correct_url(attach_0, path_for_tabs, reply)

            try:
                shutil.rmtree(path_for_tabs)
            except PermissionError:
                return CheckResult.wrong("Impossible to remove the directory for tabs. "
                                         "Perhaps you haven't closed some file?")

            return CheckResult.correct()


    if __name__ == '__main__':
        TextBasedBrowserTest().run_tests()
  learner_created: false
- name: tests.py
  visible: false
  text: |
    from test.tests import TextBasedBrowserTest

    if __name__ == '__main__':
        TextBasedBrowserTest().run_tests()
  learner_created: false
- name: input.txt
  visible: true
  text: |+
    https://bloomberg.com
    docs.python.org


  learner_created: true
- name: dir/nos.nl
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/7214#comment
status: Failed
feedback:
  message: "Wrong answer in test #1\n\nThe following token is present in the file\
    \ docs even though it's not expected to be there:\n'<p><a href=\"download.html\"\
    >Download these documents</a></p>'\nMake sure you get rid of all HTML tags.\n\n\
    Please find below the output of your program during this failed test.\nNote that\
    \ the '>' character indicates the beginning of the input line.\n\n---\n\nArguments:\
    \ ./tb_tabs\n\n[last 250 lines of output are shown, 87 skipped]\n  <li><a href=\"\
    https://docs.python.org/3.7/\">Python 3.7 (security-fixes)</a></li>\n  \n  <li><a\
    \ href=\"https://docs.python.org/3.6/\">Python 3.6 (EOL)</a></li>\n  \n  <li><a\
    \ href=\"https://docs.python.org/3.5/\">Python 3.5 (EOL)</a></li>\n  \n  <li><a\
    \ href=\"https://docs.python.org/2.7/\">Python 2.7 (EOL)</a></li>\n  \n  <li><a\
    \ href=\"https://www.python.org/doc/versions/\">All versions</a></li>\n</ul>\n\
    \n\n<h3>Other resources</h3>\n<ul>\n  \n  <li><a href=\"https://www.python.org/dev/peps/\"\
    >PEP Index</a></li>\n  <li><a href=\"https://wiki.python.org/moin/BeginnersGuide\"\
    >Beginner's Guide</a></li>\n  <li><a href=\"https://wiki.python.org/moin/PythonBooks\"\
    >Book List</a></li>\n  <li><a href=\"https://www.python.org/doc/av/\">Audio/Visual\
    \ Talks</a></li>\n  <li><a href=\"https://devguide.python.org/\">Python DeveloperÃ¢\
    \x80\x99s Guide</a></li>\n</ul>\n        </nav>\n    </div>\n</div>\n\n  \n  \
    \  <div class=\"related\" role=\"navigation\" aria-label=\"related navigation\"\
    >\n      <h3>Navigation</h3>\n      <ul>\n        <li class=\"right\" style=\"\
    margin-right: 10px\">\n          <a href=\"genindex.html\" title=\"General Index\"\
    \n             accesskey=\"I\">index</a></li>\n        <li class=\"right\" >\n\
    \          <a href=\"py-modindex.html\" title=\"Python Module Index\"\n      \
    \       >modules</a> |</li>\n\n          <li><img src=\"_static/py.svg\" alt=\"\
    python logo\" style=\"vertical-align: middle; margin-top: -1px\"/></li>\n    \
    \      <li><a href=\"https://www.python.org/\">Python</a> &#187;</li>\n      \
    \    <li class=\"switchers\">\n            <div class=\"language_switcher_placeholder\"\
    ></div>\n            <div class=\"version_switcher_placeholder\"></div>\n    \
    \      </li>\n          <li>\n              \n          </li>\n    <li id=\"cpython-language-and-version\"\
    >\n      <a href=\"#\">3.11.3 Documentation</a> &#187;\n    </li>\n\n        <li\
    \ class=\"nav-item nav-item-this\"><a href=\"\"></a></li>\n                <li\
    \ class=\"right\">\n                    \n\n    <div class=\"inline-search\" role=\"\
    search\">\n        <form class=\"inline-search\" action=\"search.html\" method=\"\
    get\">\n          <input placeholder=\"Quick search\" aria-label=\"Quick search\"\
    \ type=\"text\" name=\"q\" />\n          <input type=\"submit\" value=\"Go\" />\n\
    \          <input type=\"hidden\" name=\"check_keywords\" value=\"yes\" />\n \
    \         <input type=\"hidden\" name=\"area\" value=\"default\" />\n        </form>\n\
    \    </div>\n                     |\n                </li>\n            \n   \
    \   </ul>\n    </div>    \n\n    <div class=\"document\">\n      <div class=\"\
    documentwrapper\">\n        <div class=\"bodywrapper\">\n          <div class=\"\
    body\" role=\"main\">\n            \n  <h1>Python 3.11.3 documentation</h1>\n\
    \  <p>\n  Welcome! This is the official documentation for Python 3.11.3.\n  </p>\n\
    \  <p><strong>Parts of the documentation:</strong></p>\n  <table class=\"contentstable\"\
    \ align=\"center\"><tr>\n    <td width=\"50%\">\n      <p class=\"biglink\"><a\
    \ class=\"biglink\" href=\"whatsnew/3.11.html\">What's new in Python 3.11?</a><br/>\n\
    \        <span class=\"linkdescr\"> or <a href=\"whatsnew/index.html\">all \"\
    What's new\" documents</a> since 2.0</span></p>\n      <p class=\"biglink\"><a\
    \ class=\"biglink\" href=\"tutorial/index.html\">Tutorial</a><br/>\n         <span\
    \ class=\"linkdescr\">start here</span></p>\n      <p class=\"biglink\"><a class=\"\
    biglink\" href=\"library/index.html\">Library Reference</a><br/>\n         <span\
    \ class=\"linkdescr\">keep this under your pillow</span></p>\n      <p class=\"\
    biglink\"><a class=\"biglink\" href=\"reference/index.html\">Language Reference</a><br/>\n\
    \         <span class=\"linkdescr\">describes syntax and language elements</span></p>\n\
    \      <p class=\"biglink\"><a class=\"biglink\" href=\"using/index.html\">Python\
    \ Setup and Usage</a><br/>\n         <span class=\"linkdescr\">how to use Python\
    \ on different platforms</span></p>\n      <p class=\"biglink\"><a class=\"biglink\"\
    \ href=\"howto/index.html\">Python HOWTOs</a><br/>\n         <span class=\"linkdescr\"\
    >in-depth documents on specific topics</span></p>\n    </td><td width=\"50%\"\
    >\n      <p class=\"biglink\"><a class=\"biglink\" href=\"installing/index.html\"\
    >Installing Python Modules</a><br/>\n         <span class=\"linkdescr\">installing\
    \ from the Python Package Index &amp; other sources</span></p>\n      <p class=\"\
    biglink\"><a class=\"biglink\" href=\"distributing/index.html\">Distributing Python\
    \ Modules</a><br/>\n         <span class=\"linkdescr\">publishing modules for\
    \ installation by others</span></p>\n      <p class=\"biglink\"><a class=\"biglink\"\
    \ href=\"extending/index.html\">Extending and Embedding</a><br/>\n         <span\
    \ class=\"linkdescr\">tutorial for C/C++ programmers</span></p>\n      <p class=\"\
    biglink\"><a class=\"biglink\" href=\"c-api/index.html\">Python/C API</a><br/>\n\
    \         <span class=\"linkdescr\">reference for C/C++ programmers</span></p>\n\
    \      <p class=\"biglink\"><a class=\"biglink\" href=\"faq/index.html\">FAQs</a><br/>\n\
    \         <span class=\"linkdescr\">frequently asked questions (with answers!)</span></p>\n\
    \    </td></tr>\n  </table>\n\n  <p><strong>Indices and tables:</strong></p>\n\
    \  <table class=\"contentstable\" align=\"center\"><tr>\n    <td width=\"50%\"\
    >\n      <p class=\"biglink\"><a class=\"biglink\" href=\"py-modindex.html\">Global\
    \ Module Index</a><br/>\n         <span class=\"linkdescr\">quick access to all\
    \ modules</span></p>\n      <p class=\"biglink\"><a class=\"biglink\" href=\"\
    genindex.html\">General Index</a><br/>\n         <span class=\"linkdescr\">all\
    \ functions, classes, terms</span></p>\n      <p class=\"biglink\"><a class=\"\
    biglink\" href=\"glossary.html\">Glossary</a><br/>\n         <span class=\"linkdescr\"\
    >the most important terms explained</span></p>\n    </td><td width=\"50%\">\n\
    \      <p class=\"biglink\"><a class=\"biglink\" href=\"search.html\">Search page</a><br/>\n\
    \         <span class=\"linkdescr\">search this documentation</span></p>\n   \
    \   <p class=\"biglink\"><a class=\"biglink\" href=\"contents.html\">Complete\
    \ Table of Contents</a><br/>\n         <span class=\"linkdescr\">lists all sections\
    \ and subsections</span></p>\n    </td></tr>\n  </table>\n\n  <p><strong>Meta\
    \ information:</strong></p>\n  <table class=\"contentstable\" align=\"center\"\
    ><tr>\n    <td width=\"50%\">\n      <p class=\"biglink\"><a class=\"biglink\"\
    \ href=\"bugs.html\">Reporting bugs</a></p>\n      <p class=\"biglink\"><a class=\"\
    biglink\" href=\"https://devguide.python.org/docquality/#helping-with-documentation\"\
    >Contributing to Docs</a></p>\n      <p class=\"biglink\"><a class=\"biglink\"\
    \ href=\"about.html\">About the documentation</a></p>\n    </td><td width=\"50%\"\
    >\n      <p class=\"biglink\"><a class=\"biglink\" href=\"license.html\">History\
    \ and License of Python</a></p>\n      <p class=\"biglink\"><a class=\"biglink\"\
    \ href=\"copyright.html\">Copyright</a></p>\n    </td></tr>\n  </table>\n\n  \
    \          <div class=\"clearer\"></div>\n          </div>\n        </div>\n \
    \     </div>\n      <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"\
    main navigation\">\n        <div class=\"sphinxsidebarwrapper\">\n\n\n<h3>Download</h3>\n\
    <p><a href=\"download.html\">Download these documents</a></p>\n\n\n<h3>Docs by\
    \ version</h3>\n<ul>\n  \n  <li><a href=\"https://docs.python.org/3.12/\">Python\
    \ 3.12 (in development)</a></li>\n  \n  <li><a href=\"https://docs.python.org/3.11/\"\
    >Python 3.11 (stable)</a></li>\n  \n  <li><a href=\"https://docs.python.org/3.10/\"\
    >Python 3.10 (stable)</a></li>\n  \n  <li><a href=\"https://docs.python.org/3.9/\"\
    >Python 3.9 (security-fixes)</a></li>\n  \n  <li><a href=\"https://docs.python.org/3.8/\"\
    >Python 3.8 (security-fixes)</a></li>\n  \n  <li><a href=\"https://docs.python.org/3.7/\"\
    >Python 3.7 (security-fixes)</a></li>\n  \n  <li><a href=\"https://docs.python.org/3.6/\"\
    >Python 3.6 (EOL)</a></li>\n  \n  <li><a href=\"https://docs.python.org/3.5/\"\
    >Python 3.5 (EOL)</a></li>\n  \n  <li><a href=\"https://docs.python.org/2.7/\"\
    >Python 2.7 (EOL)</a></li>\n  \n  <li><a href=\"https://www.python.org/doc/versions/\"\
    >All versions</a></li>\n</ul>\n\n\n<h3>Other resources</h3>\n<ul>\n  \n  <li><a\
    \ href=\"https://www.python.org/dev/peps/\">PEP Index</a></li>\n  <li><a href=\"\
    https://wiki.python.org/moin/BeginnersGuide\">Beginner's Guide</a></li>\n  <li><a\
    \ href=\"https://wiki.python.org/moin/PythonBooks\">Book List</a></li>\n  <li><a\
    \ href=\"https://www.python.org/doc/av/\">Audio/Visual Talks</a></li>\n  <li><a\
    \ href=\"https://devguide.python.org/\">Python DeveloperÃ¢\x80\x99s Guide</a></li>\n\
    </ul>\n        </div>\n      </div>\n      <div class=\"clearer\"></div>\n   \
    \ </div>  \n    <div class=\"related\" role=\"navigation\" aria-label=\"related\
    \ navigation\">\n      <h3>Navigation</h3>\n      <ul>\n        <li class=\"right\"\
    \ style=\"margin-right: 10px\">\n          <a href=\"genindex.html\" title=\"\
    General Index\"\n             >index</a></li>\n        <li class=\"right\" >\n\
    \          <a href=\"py-modindex.html\" title=\"Python Module Index\"\n      \
    \       >modules</a> |</li>\n\n          <li><img src=\"_static/py.svg\" alt=\"\
    python logo\" style=\"vertical-align: middle; margin-top: -1px\"/></li>\n    \
    \      <li><a href=\"https://www.python.org/\">Python</a> &#187;</li>\n      \
    \    <li class=\"switchers\">\n            <div class=\"language_switcher_placeholder\"\
    ></div>\n            <div class=\"version_switcher_placeholder\"></div>\n    \
    \      </li>\n          <li>\n              \n          </li>\n    <li id=\"cpython-language-and-version\"\
    >\n      <a href=\"#\">3.11.3 Documentation</a> &#187;\n    </li>\n\n        <li\
    \ class=\"nav-item nav-item-this\"><a href=\"\"></a></li>\n                <li\
    \ class=\"right\">\n                    \n\n    <div class=\"inline-search\" role=\"\
    search\">\n        <form class=\"inline-search\" action=\"search.html\" method=\"\
    get\">\n          <input placeholder=\"Quick search\" aria-label=\"Quick search\"\
    \ type=\"text\" name=\"q\" />\n          <input type=\"submit\" value=\"Go\" />\n\
    \          <input type=\"hidden\" name=\"check_keywords\" value=\"yes\" />\n \
    \         <input type=\"hidden\" name=\"area\" value=\"default\" />\n        </form>\n\
    \    </div>\n                     |\n                </li>\n            \n   \
    \   </ul>\n    </div>  \n    <div class=\"footer\">\n    &copy; <a href=\"copyright.html\"\
    >Copyright</a> 2001-2023, Python Software Foundation.\n    <br />\n    This page\
    \ is licensed under the Python Software Foundation License Version 2.\n    <br\
    \ />\n    Examples, recipes, and other code in the documentation are additionally\
    \ licensed under the Zero Clause BSD License.\n    <br />\n    See <a href=\"\
    /license.html\">History and License</a> for more information.<br />\n    <br />\n\
    \n    The Python Software Foundation is a non-profit corporation.\n<a href=\"\
    https://www.python.org/psf/donations/\">Please donate.</a>\n<br />\n    <br />\n\
    \n    Last updated on Apr 23, 2023.\n    <a href=\"/bugs.html\">Found a bug</a>?\n\
    \    <br />\n\n    Created using <a href=\"https://www.sphinx-doc.org/\">Sphinx</a>\
    \ 4.5.0.\n    </div>\n\n    <script type=\"text/javascript\" src=\"_static/switchers.js\"\
    ></script>\n  </body>\n</html>\n> exit"
  time: "Sun, 23 Apr 2023 19:25:44 UTC"
record: 5
